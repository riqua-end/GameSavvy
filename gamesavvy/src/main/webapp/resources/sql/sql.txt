-- pk설정
alter table (테이블)  add constraint pk_(테이블명) primary key(컬럼);

-- fk설정
alter table 자식테이블 add constraint fk_자식테이블_부모테이블 foreign key (컬럼) references 부모테이블?(컬럼) DELETE CASCADE;

-- 테스트용 내용 삽입 시퀀스 사용시는 예:(seq_board.nextval) 이런식으로 작성
insert into (테이블)  (컬럼, 컬럼, 컬럼, 컬럼) 
values('내용', '내용','내용','내용');

====================================================================================  게시판 테이블

-- 시퀀스 생성
create sequence seq_gs_board nocache;

--게시판 테이블 대충 만든거라 확인후 수정할수 있으면 수정 pk지정해야함.
create table gs_board( 
bno number(10,0) not null,
title varchar2(200) not null,
content varchar2(2000) not null,
userid varchar2(50) not null,
regdate date default sysdate,
replycnt number default 0,
)

-- 아직 추가 안함.
gs_type number(10,0),
gs_img varchar2(1000)

-- pk설정
alter table gs_board add constraint pk_gs_board primary key(bno);

commit;


====================================================================================  댓글 테이블

--댓글용 테이블
create table gs_reply(
rno number(10,0) not null,
bno number(10,0) not null,
reply varchar2(1000) not null,
replyer varchar2(50) not null,
replyDate date default sysdate,
updatedate date default sysdate
);

--댓글 테이블용 시퀀스
create sequence seq_gs_reply nocache;

--gs_reply에 pk지정
alter table gs_reply add constraint pk_gs_reply primary key (rno);

--gs_reply에 외래키 지정
alter table gs_reply add constraint fk_gs_reply foreign key (bno) references gs_board (bno);

commit;

--댓글 처리를 위한 인덱스 생성(처리 속도 개선)
Create index idx_gs_reply on gs_reply (bno desc,rno asc) ;

--댓글 개수 처리
alter table gs_reply add (replycnt number default 0);

--댓글 개수 초기화 처리
update gs_board set replycnt = (select count(rno) from gs_reply where gs_reply.bno = gs_board.bno);


--댓글 테이블 기존 외래키 제약 조건 삭제
ALTER TABLE gs_reply
DROP CONSTRAINT fk_gs_reply;


--댓글 테이블 외래 키 제약 조건 변경
ALTER TABLE gs_reply
ADD CONSTRAINT fk_gs_reply
FOREIGN KEY (BNO)
REFERENCES gs_board (BNO)
ON DELETE CASCADE;
commit;


====================================================================================  회원 테이블

--사용자 정의 security용 실습용 회원 관련 테이블
create table gs_member(
userid varchar2(50) not null primary key,
userpw varchar2(100) not null,
username varchar2(100) not null,
address varchar2(300) not null,
regdate date default sysdate,
updatedate date default sysdate,
enabled char(1) default '1');

--사용자 정의 security용 실습용 회원의 권환 관련 테이블
create table gs_member_auth(
userid varchar2(50) not null,
auth varchar2(50) not null,
constraint fk_member_auth foreign key(userid) references gs_member(userid)
);

commit;

--remember-me 관련 테이블(스프링 지정 규격)
create table persistent_logins (
username varchar2(64) not null,
series varchar(64) primary key,
token varchar(64) not null,
last_used timestamp not null);

commit;