====================================================================================  게시판 테이블

-- 시퀀스 생성
create sequence seq_gs_board nocache;

--게시판 테이블 대충 만든거라 확인후 수정할수 있으면 수정 pk지정해야함.
create table gs_board( 
bno number(10,0) not null,
title varchar2(200) not null,
content varchar2(2000) not null,
userid varchar2(50) not null,
regdate date default sysdate,
updatedate date default sysdate,
replycnt number default 0);

-- pk설정
alter table gs_board add constraint pk_gs_board primary key(bno);

-- fk설정 (gs_member userid)
alter table gs_board add CONSTRAINT fk_gs_board foreign key (userid) references gs_member (userid);

--조회수 추가
alter table gs_board add (cnt number default 0);

--추천 기능 구현
alter table gs_board add (recommend_count number default 0);

-- gs_board 테이블에 gs_type 컬럼 추가
ALTER TABLE gs_board ADD gs_type NUMBER(10,0);

-- 기존 데이터 업데이트 예시
UPDATE gs_board SET gs_type = 1; -- 자유게시판

-- gs_type 의 게시판 구분
gs_type == '1' 자유게시판
gs_type == '2' 공략게시판
gs_type == '3' 정보게시판
gs_type == '4' 리뷰게시판
gs_type == '5' 공지사항

====================================================================================  댓글 테이블

--댓글용 테이블
create table gs_reply(
rno number(10,0) not null,
bno number(10,0) not null,
reply varchar2(1000) not null,
replyer varchar2(50) not null,
replyDate date default sysdate,
updatedate date default sysdate
);

--댓글 테이블용 시퀀스
create sequence seq_gs_reply nocache;

--gs_reply에 pk지정
alter table gs_reply add constraint pk_gs_reply primary key (rno);

--gs_reply에 외래키 지정
ALTER TABLE gs_reply
ADD CONSTRAINT fk_gs_reply
FOREIGN KEY (BNO)
REFERENCES gs_board (BNO)
ON DELETE CASCADE;

commit;

--댓글 처리를 위한 인덱스 생성(처리 속도 개선)
Create index idx_gs_reply on gs_reply (bno desc,rno asc) ;

--댓글 개수 초기화 처리
update gs_board set replycnt = (select count(rno) from gs_reply where gs_reply.bno = gs_board.bno);

commit;

--gs_member에 외래키 지정
ALTER TABLE gs_reply ADD CONSTRAINT fk_reply_member FOREIGN KEY (replyer) REFERENCES gs_member(userid) ON DELETE CASCADE;

====================================================================================  회원 테이블

--사용자 정의 security용 실습용 회원 관련 테이블
create table gs_member(
userid varchar2(50) not null primary key,
userpw varchar2(100) not null,
username varchar2(100) not null,
address varchar2(300) not null,
regdate date default sysdate,
updatedate date default sysdate,
enabled char(1) default '1');

--사용자 정의 security용 실습용 회원의 권환 관련 테이블
create table gs_member_auth(
userid varchar2(50) not null,
auth varchar2(50) not null,
constraint fk_member_auth foreign key(userid) references gs_member(userid)
);

commit;

--remember-me 관련 테이블(스프링 지정 규격)
create table persistent_logins (
username varchar2(64) not null,
series varchar(64) primary key,
token varchar(64) not null,
last_used timestamp not null);

commit;


====================================================================================  좋아요 테이블


--게시판 좋아요 기능 관련 테이블
CREATE SEQUENCE seq_gs_like START WITH 1 INCREMENT BY 1;

CREATE TABLE gs_like (
    like_id NUMBER PRIMARY KEY,
    user_id VARCHAR2(50) NOT NULL,
    board_id NUMBER NOT NULL,
    like_date DATE DEFAULT SYSDATE,
    CONSTRAINT fk_like_user_id FOREIGN KEY (user_id) REFERENCES gs_member (userid),
    CONSTRAINT fk_like_board_id FOREIGN KEY (board_id) REFERENCES gs_board (bno) ON DELETE CASCADE,
    CONSTRAINT unique_like_gs_board UNIQUE (user_id, board_id)
);

ALTER TABLE gs_like
ADD like_status NUMBER(1) DEFAULT 0;


====================================================================================  파일첨부 테이블


--파일첨부 테이블
create table gs_attach(
uuid varchar2(100) not null,
uploadPath varchar2(200) not null,
fileName varchar2(100) not null,
filetype char(1) default 'I',
bno number(10,0)
);
--attach pk만들기
alter table gs_attach add constraint pk_gs_attach primary key (uuid);

--tbl_attach fk만들기
alter table gs_attach add constraint fk_gs_attach foreign key (bno) references gs_board(bno);

--gs_type 컬럼 추가 예정